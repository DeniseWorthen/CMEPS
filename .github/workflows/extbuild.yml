# This is a workflow to compile the cmeps source without cime
name: extbuild

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-cmeps:
    runs-on: ubuntu-latest
    env:
      CC: mpicc
      FC: mpifort
      CXX: mpicxx
      CPPFLAGS: "-I/usr/include -I/usr/local/include"
      # Versions of all dependencies can be updated here
      ESMF_VERSION: v8.4.0
      PNETCDF_VERSION: checkpoint.1.12.3
      NETCDF_FORTRAN_VERSION: v4.6.0
      PIO_VERSION: pio2_5_10
    steps:
      - uses: actions/checkout@v3
        # Build the ESMF library, if the cache contains a previous build
        # it will be used instead
      - id: load-env
        run: |
          sudo apt-get update
          sudo apt-get install gfortran wget openmpi-bin netcdf-bin libopenmpi-dev libnetcdf-dev autotools-dev autoconf
      - id: cache-esmf
        uses: actions/cache@v3
        with:
          path: ~/ESMF
          key: ${{ runner.os }}-${{ env.ESMF_VERSION }}-ESMF
      - id: cache-pnetcdf
        uses: actions/cache@v2
        with:
          path: ~/pnetcdf
          key: ${{ runner.os }}-${{ env.PNETCDF_VERSION}}-pnetcdf
      - name: Cache netcdf-fortran
        id: cache-netcdf-fortran
        uses: actions/cache@v2
        with:
          path: ~/netcdf-fortran
          key: ${{ runner.os }}-${{ env.NETCDF_FORTRAN_VERSION }}-netcdf-fortran
      - name: Cache ParallelIO
        id: cache-ParallelIO
        uses: actions/cache@v2
        with:
          path: ~/pio
          key: ${{ runner.os }}-${{ env.PIO_VERSION }}.pio
          restore-keys: |
            ${{ runner.os }}-${{ env.NETCDF_FORTRAN_VERSION }}-netcdf-fortran
            ${{ runner.os }}-${{ env.PNETCDF_VERSION }}-pnetcdf
      - name: Build PNetCDF
        if: steps.cache-pnetcdf.outputs.cache-hit != 'true'
        uses: ESCOMP/CDEPS/.github/actions/buildpnetcdf@e06246b560d3132170bb1a5443fa3d65dfbd2040
        with:
          pnetcdf_version: ${{ env.PNETCDF_VERSION }}
          install_prefix: $HOME/pnetcdf
      - name: Build NetCDF Fortran
        if: steps.cache-netcdf-fortran.outputs.cache-hit != 'true'
        uses: ESCOMP/CDEPS/.github/actions/buildnetcdff@e06246b560d3132170bb1a5443fa3d65dfbd2040
        with:
          netcdf_fortran_version: ${{ env.NETCDF_FORTRAN_VERSION }}
          install_prefix: $HOME/netcdf-fortran
          netcdf_c_path: /usr
      - name: Build ParallelIO
        if: steps.cache-ParallelIO.outputs.cache-hit != 'true'
        uses: ESCOMP/CDEPS/.github/actions/buildpio@e06246b560d3132170bb1a5443fa3d65dfbd2040
        with:
          parallelio_version: ${{ env.ParallelIO_VERSION }}
          netcdf_c_path: /usr
          netcdf_fortran_path: $HOME/netcdf-fortran
          pnetcdf_path: $HOME/pnetcdf
          install_prefix: $HOME/pio
      - name: Build ESMF
        if: steps.cache-esmf.outputs.cache-hit != 'true'
        uses: ESCOMP/CDEPS/.github/actions/buildesmf@e06246b560d3132170bb1a5443fa3d65dfbd2040
        with:
          esmf_version: ${{ env.ESMF_VERSION }}
          esmf_bopt: g
          esmf_comm: openmpi
          install_prefix: $HOME/ESMF
          netcdf_c_path: /usr
          netcdf_fortran_path: $HOME/netcdf-fortran
          pnetcdf_path: $HOME/pnetcdf
          parallelio_path: $HOME/pio
      - name: Build CMEPS
        run: |
          export ESMFMKFILE=$HOME/ESMF/lib/libg/Linux.gfortran.64.openmpi.default/esmf.mk
          export PIO=$HOME/pio
          mkdir build-cmeps
          pushd build-cmeps
          cmake -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_Fortran_FLAGS="-g -Wall -ffree-form -ffree-line-length-none" ../
          make VERBOSE=1
          popd
